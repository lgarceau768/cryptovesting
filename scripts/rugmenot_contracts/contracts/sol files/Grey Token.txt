Approval(address,address,uint256)
Transfer(address,address,uint256)
name()
approve(address,uint256)
totalSupply()
transferFrom(address,address,uint256)
decimals()
increaseAllowance(address,uint256)
balanceOf(address)
symbol()
decreaseAllowance(address,uint256)
transfer(address,uint256)
allowance(address,address)
event Approval(address indexed _arg0, address indexed _arg1, uint256 _arg2)
event Transfer(address indexed _arg0, address indexed _arg1, uint256 _arg2)

mapping (address => uint256) public balanceOf;
mapping (address => mapping (address => uint256)) public allowance;

unknown public totalSupply;
unknown public decimals;

function increaseAllowance(address _arg0, uint256 _arg1) public {
    require(((_arg0 == 0) == 0));
    require(((allowance[msg.sender] + _arg1) >= allowance[msg.sender]));
    allowance[msg.sender] = (allowance[msg.sender] + _arg1);
    emit Approval(msg.sender, _arg0, allowance[msg.sender])
    return 1;
}

function name() public {
    if(((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) == 0) {
        memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))));
        memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2);
        if(0 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) {
            if((1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) == 0) {
                return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
            } else {
                memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))]));
                return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
            }
        } else {
            memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))] = (memory[a0]);
            if(20 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) goto(109);
            memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))) + 20)] = (memory[c0]);
            goto(ee);
        }
    } else {
        if(1f < ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) {
            if((a0 + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) > c0) {
                if((a0 + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) > e0) goto(592);
                memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))));
                memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2);
                if(0 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) {
                    if((1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) == 0) {
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
                    } else {
                        memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))]));
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
                    }
                } else {
                    memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))] = storage[keccak256(3)];
                    if(20 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) goto(109);
                    memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))) + 20)] = storage[(1 + keccak256(3))];
                    goto(ee);
                }
            } else {
                memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))));
                memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2);
                if(0 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) {
                    if((1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) == 0) {
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
                    } else {
                        memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))]));
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
                    }
                } else {
                    memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))] = storage[keccak256(3)];
                    if(20 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) goto(109);
                    memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))) + 20)] = (memory[c0]);
                    goto(ee);
                }
            }
        } else {
            memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))));
            memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2);
            if(0 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) {
                if((1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) == 0) {
                    return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
                } else {
                    memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))]));
                    return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))];
                }
            } else {
                memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20)))))] = ((storage[3] / 100) * 100);
                if(20 >= ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) goto(109);
                memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[3]) == 0)) - 1) && storage[3]) / 2)) / 20) * 20))))) + 20)] = (memory[c0]);
                goto(ee);
            }
        }
    }
}

function approve(address _arg0, uint256 _arg1) public {
    require(((_arg0 == 0) == 0));
    allowance[msg.sender] = _arg1;
    emit Approval(msg.sender, _arg0, _arg1)
    return 1;
}

function transferFrom(address _arg0, address _arg1, uint256 _arg2) public {
    require((_arg2 <= allowance[_arg0]));
    require((_arg2 <= allowance[_arg0]));
    allowance[_arg0] -= _arg2;
    require((_arg2 <= balanceOf[_arg0]));
    require(((_arg1 == 0) == 0));
    if(_arg2 <= balanceOf[_arg0]) goto(ec1);
    revert();
}

function symbol() public {
    if(((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) == 0) {
        memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))));
        memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2);
        if(0 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) {
            if((1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) == 0) {
                return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
            } else {
                memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))]));
                return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
            }
        } else {
            memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))] = (memory[a0]);
            if(20 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) goto(39b);
            memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))) + 20)] = (memory[c0]);
            goto(380);
        }
    } else {
        if(1f < ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) {
            if((a0 + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) > c0) {
                if((a0 + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) > e0) goto(bb3);
                memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))));
                memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2);
                if(0 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) {
                    if((1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) == 0) {
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
                    } else {
                        memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))]));
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
                    }
                } else {
                    memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))] = storage[keccak256(4)];
                    if(20 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) goto(39b);
                    memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))) + 20)] = storage[(1 + keccak256(4))];
                    goto(380);
                }
            } else {
                memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))));
                memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2);
                if(0 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) {
                    if((1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) == 0) {
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
                    } else {
                        memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))]));
                        return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
                    }
                } else {
                    memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))] = storage[keccak256(4)];
                    if(20 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) goto(39b);
                    memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))) + 20)] = (memory[c0]);
                    goto(380);
                }
            }
        } else {
            memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))] = ((20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))));
            memory[(20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))] = ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2);
            if(0 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) {
                if((1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) == 0) {
                    return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
                } else {
                    memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))] = ((~((100 ** (20 - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - 1)) && (memory[((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))]));
                    return memory[(80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))):((80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))+((20 + ((((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2) + (20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))) - (1f && ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)))) - (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))];
                }
            } else {
                memory[(20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20)))))] = ((storage[4] / 100) * 100);
                if(20 >= ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) goto(39b);
                memory[((20 + (20 + (80 + (20 + (((1f + ((((100 * ((1 && storage[4]) == 0)) - 1) && storage[4]) / 2)) / 20) * 20))))) + 20)] = (memory[c0]);
                goto(380);
            }
        }
    }
}

function decreaseAllowance(address _arg0, uint256 _arg1) public {
    require(((_arg0 == 0) == 0));
    require((_arg1 <= allowance[msg.sender]));
    allowance[msg.sender] -= _arg1;
    emit Approval(msg.sender, _arg0, allowance[msg.sender])
    return 1;
}

function transfer(address _arg0, uint256 _arg1) public {
    require((_arg1 <= balanceOf[msg.sender]));
    require(((_arg0 == 0) == 0));
    require((_arg1 <= balanceOf[msg.sender]));
    balanceOf[msg.sender] -= _arg1;
    require(((balanceOf[_arg0] + _arg1) >= balanceOf[_arg0]));
    balanceOf[_arg0] = (balanceOf[_arg0] + _arg1);
    emit Transfer(msg.sender, _arg0, _arg1)
    return 1;
}

